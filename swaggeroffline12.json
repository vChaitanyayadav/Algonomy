{
  "swagger": "2.0",
  "info": {
    "version": "2.0-oas3",
    "title": "ABFRL User Auth Flow API",
    "contact": {}
  },
  "host": "apigateway.abfrl.in",
  "basePath": "/",
  "securityDefinitions": {},
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user/device": {
      "post": {
        "description": "",
        "summary": "Trigger device profile or visual search",
        "operationId": "Triggerdeviceprofileorvisualsearch",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "pagetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDeviceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/user/session": {
      "post": {
        "description": "",
        "summary": "Start a user session",
        "operationId": "Startausersession",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "pagetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserSessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session started",
            "headers": {}
          }
        }
      }
    },
    "/user/exist": {
      "post": {
        "description": "",
        "summary": "Check if user exists",
        "operationId": "Checkifuserexists",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "pagetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserExistRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User existence verified",
            "headers": {}
          },
          "404": {
            "description": "User not found",
            "headers": {}
          }
        }
      }
    },
    "/user/requestOtp": {
      "post": {
        "description": "",
        "summary": "Request OTP",
        "operationId": "RequestOTP",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "pagetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserRequestOtpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP sent",
            "headers": {}
          }
        }
      }
    },
    "/user/verifyOtp": {
      "post": {
        "description": "",
        "summary": "Verify OTP",
        "operationId": "VerifyOTP",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserVerifyOtpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP verified",
            "headers": {}
          },
          "401": {
            "description": "Invalid OTP",
            "headers": {}
          }
        }
      }
    },
    "/user/info": {
      "post": {
        "description": "",
        "summary": "Fetch user info",
        "operationId": "Fetchuserinfo",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserInfoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile data",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/cart": {
      "post": {
        "description": "",
        "summary": "Retrieve or create shopping cart details",
        "operationId": "Retrieveorcreateshoppingcartdetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart details retrieved successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/location/coordinates": {
      "post": {
        "description": "",
        "summary": "Submit or update user location coordinates",
        "operationId": "Submitorupdateuserlocationcoordinates",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "pagetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LocationCoordinatesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location coordinates saved successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/wishlist": {
      "post": {
        "description": "",
        "summary": "Retrieve or update user wishlist items",
        "operationId": "Retrieveorupdateuserwishlistitems",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "pagetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/WishlistRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wishlist retrieved or updated successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/menu": {
      "get": {
        "description": "",
        "summary": "Retrieve menu view",
        "operationId": "Retrievemenuview",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shop id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Unique identifier for the request"
          },
          {
            "name": "device type",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Unique identifier for the request"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/MenuResponse"
            },
            "headers": {
              "X-RateLimit-Limit": {
                "description": "The maximum number of requests allowed in the current period",
                "type": "string"
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests remaining in the current period",
                "type": "string"
              },
              "X-RateLimit-Reset": {
                "description": "The time at which the rate limit resets",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/products/vh/{id}": {
      "post": {
        "description": "",
        "summary": "getProductDetailsById",
        "operationId": "getProductDetailsById",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier of the product"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "device-token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Device token for push notifications"
          },
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Identifier for the shop"
          },
          {
            "name": "device-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Unique device identifier"
          },
          {
            "name": "device-type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Type of device (e.g., mobile, tablet)"
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Hash for request validation"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductsVhRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with product details",
            "schema": {
              "$ref": "#/definitions/ProductsVhResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad request due to invalid parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          },
          "404": {
            "description": "Product not found",
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "headers": {}
          }
        }
      }
    },
    "/wishlist/add": {
      "post": {
        "description": "",
        "summary": "Add a product to the user's wishlist",
        "operationId": "Addaproducttotheuser'swishlist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/WishlistAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wishlist item added successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/cart/add": {
      "post": {
        "description": "",
        "summary": "Add a product to the shopping cart",
        "operationId": "Addaproducttotheshoppingcart",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CartAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product added to cart successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/product/loyalty": {
      "post": {
        "description": "",
        "summary": "Get loyalty points for a product for a specific customer",
        "operationId": "Getloyaltypointsforaproductforaspecificcustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductLoyaltyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loyalty points fetched successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/product/views": {
      "post": {
        "description": "",
        "summary": "Record a view event for a product",
        "operationId": "Recordavieweventforaproduct",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductViewsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product view recorded successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/coupon/eligible": {
      "get": {
        "description": "",
        "summary": "Retrieve eligible coupons for a specific product and customer",
        "operationId": "Retrieveeligiblecouponsforaspecificproductandcustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Eligible coupons retrieved successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/coupon/termsAndConditions": {
      "get": {
        "description": "",
        "summary": "Retrieve terms and conditions for a given coupon",
        "operationId": "Retrievetermsandconditionsforagivencoupon",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "device",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved coupon terms and conditions",
            "headers": {}
          },
          "400": {
            "description": "Invalid request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "404": {
            "description": "Terms and conditions not found",
            "headers": {}
          }
        }
      }
    },
    "/service": {
      "post": {
        "description": "",
        "summary": "Retrieve available services for a store based on location and customer",
        "operationId": "Retrieveavailableservicesforastorebasedonlocationandcustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "pagetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service data retrieved successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/cartt": {
      "post": {
        "description": "",
        "summary": "Retrieve the cart details for a customer",
        "operationId": "Retrievethecartdetailsforacustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarttRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart data retrieved successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/cart/delete": {
      "post": {
        "description": "",
        "summary": "Delete a product from the user's cart",
        "operationId": "Deleteaproductfromtheuser'scart",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CartDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product successfully removed from cart",
            "headers": {}
          },
          "400": {
            "description": "Invalid request or product not in cart",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/cartt/add": {
      "post": {
        "description": "",
        "summary": "Add a product to the user's cart",
        "operationId": "Addaproducttotheuser'scart",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarttAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product added to cart successfully",
            "headers": {}
          },
          "400": {
            "description": "Invalid request or product already in cart",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/coupon/applyPromo": {
      "post": {
        "description": "",
        "summary": "Apply a promotional coupon to the user's cart",
        "operationId": "Applyapromotionalcoupontotheuser'scart",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "device",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CouponApplyPromoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promo applied successfully",
            "headers": {}
          },
          "400": {
            "description": "Invalid promo code or request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/coupon/deletePromo": {
      "post": {
        "description": "",
        "summary": "Remove an applied promotional coupon from the user's cart",
        "operationId": "Removeanappliedpromotionalcouponfromtheuser'scart",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "device",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CouponDeletePromoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promo removed successfully",
            "headers": {}
          },
          "400": {
            "description": "Invalid request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/address/add": {
      "post": {
        "description": "",
        "summary": "Add a new address for the user",
        "operationId": "Addanewaddressfortheuser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddressAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address added successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        }
      }
    },
    "/address/update": {
      "post": {
        "description": "",
        "summary": "Update an existing address for the user",
        "operationId": "Updateanexistingaddressfortheuser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddressUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address updated successfully",
            "headers": {}
          },
          "400": {
            "description": "Invalid request or missing parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "404": {
            "description": "Address not found",
            "headers": {}
          }
        }
      }
    },
    "/cart/updateAddress": {
      "post": {
        "description": "",
        "summary": "Update shipping and invoice address for a cart",
        "operationId": "Updateshippingandinvoiceaddressforacart",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content‑Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-TypeHeader",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CartUpdateAddressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart address updated successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request (invalid or missing parameters)",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        }
      }
    },
    "/address/delete": {
      "post": {
        "description": "",
        "summary": "Delete a saved address for the user",
        "operationId": "Deleteasavedaddressfortheuser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddressDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address deleted successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request (invalid or missing parameters)",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        }
      }
    },
    "/user/credits": {
      "post": {
        "description": "",
        "summary": "Retrieve user credits",
        "operationId": "Retrieveusercredits",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserCreditsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Credits retrieved successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/creditsHistory": {
      "post": {
        "description": "",
        "summary": "Retrieve the user's credits history",
        "operationId": "Retrievetheuser'screditshistory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreditsHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved credits history",
            "headers": {}
          },
          "400": {
            "description": "Bad request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/user/loyaltyProgressbar": {
      "post": {
        "description": "This API retrieves the user's loyalty progress bar based on their activity and points.",
        "summary": "Retrieve user's loyalty progress bar data",
        "operationId": "Retrieveuser'sloyaltyprogressbardata",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserLoyaltyProgressbarRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the user's loyalty progress bar.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/user/loyaltyTransactions": {
      "post": {
        "description": "",
        "summary": "Fetch User Loyalty Transactions",
        "operationId": "FetchUserLoyaltyTransactions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserLoyaltyTransactionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loyalty transactions fetched successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad request, possibly due to invalid parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized, user needs to be authenticated",
            "headers": {}
          }
        }
      }
    },
    "/payment/tokenizedCard": {
      "post": {
        "description": "",
        "summary": "Tokenize payment card details",
        "operationId": "Tokenizepaymentcarddetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentTokenizedCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment successfully tokenized",
            "headers": {}
          },
          "400": {
            "description": "Bad request, invalid input",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized, invalid device or token",
            "headers": {}
          }
        }
      }
    },
    "/wishlistt": {
      "post": {
        "description": "",
        "summary": "Add or Retrieve items from the user's wishlist",
        "operationId": "AddorRetrieveitemsfromtheuser'swishlist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/WishlisttRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wishlist retrieved or updated successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/wishlist/delete": {
      "post": {
        "description": "",
        "summary": "Delete items from the user's wishlist",
        "operationId": "Deleteitemsfromtheuser'swishlist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/WishlistDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wishlist items deleted successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/wishlisttt": {
      "post": {
        "description": "",
        "summary": "Add or Retrieve items from the user's wishlist1",
        "operationId": "AddorRetrieveitemsfromtheuser'swishlist1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/WishlistttRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wishlist retrieved or updated successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/review/list": {
      "post": {
        "description": "",
        "summary": "Retrieve list of user reviews",
        "operationId": "Retrievelistofuserreviews",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReviewListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of reviews",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/order": {
      "post": {
        "description": "This API is used to fetch a list of orders made by a customer.",
        "summary": "Retrieve user orders",
        "operationId": "Retrieveuserorders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved orders",
            "headers": {}
          },
          "400": {
            "description": "Invalid request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "headers": {}
          }
        }
      }
    },
    "/order/details": {
      "post": {
        "description": "",
        "summary": "Retrieve detailed information for a specific order",
        "operationId": "Retrievedetailedinformationforaspecificorder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved order details",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/user/cartCount": {
      "post": {
        "description": "Returns the total number of items present in the customer's cart.",
        "summary": "Retrieve the user's cart item count",
        "operationId": "Retrievetheuser'scartitemcount",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserCartCountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned cart count",
            "headers": {}
          },
          "400": {
            "description": "Invalid request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/newsletter": {
      "post": {
        "description": "Allows users to subscribe to or update their newsletter subscription using email or mobile.",
        "summary": "Subscribe or manage user newsletter preferences",
        "operationId": "Subscribeormanageusernewsletterpreferences",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NewsletterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated newsletter subscription",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/product/notify": {
      "post": {
        "description": "Allows a user to subscribe to restock notifications for a specific product variant.",
        "summary": "Notify the user when a product is back in stock",
        "operationId": "Notifytheuserwhenaproductisbackinstock",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductNotifyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully registered for product notification",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/address": {
      "post": {
        "description": "Handles address information for the user, potentially related to cart or checkout.",
        "summary": "General Address API",
        "operationId": "GeneralAddressAPI",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address operation completed successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/user/updateCart": {
      "post": {
        "description": "This API updates the cart with new data like updated items, cart metadata, or session-based updates.",
        "summary": "Update the user's cart",
        "operationId": "Updatetheuser'scart",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserUpdateCartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart updated successfully",
            "headers": {}
          },
          "400": {
            "description": "Invalid input or cart data",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/order/arriving": {
      "post": {
        "description": "This API returns orders that are expected to arrive for the customer.",
        "summary": "Retrieve list of arriving orders for the user",
        "operationId": "Retrievelistofarrivingordersfortheuser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderArrivingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved arriving orders",
            "headers": {}
          },
          "400": {
            "description": "Invalid request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/termsandconditons": {
      "get": {
        "description": "This API retrieves the terms and conditions based on the specified type such as \"offer\" or \"membership\".",
        "summary": "Retrieve terms and conditions",
        "operationId": "Retrievetermsandconditions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Terms and conditions successfully retrieved",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/shopinfo": {
      "get": {
        "description": "This API retrieves basic configuration and detail information for a specific shop.",
        "summary": "Retrieve shop information",
        "operationId": "Retrieveshopinformation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "fcmToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "validateHash",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Shop info retrieved successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/category": {
      "get": {
        "description": "This API returns details for product categories, including category name and metadata.",
        "summary": "Retrieve category information",
        "operationId": "Retrievecategoryinformation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "newCategory",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "categoryName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Category information retrieved successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/category/id": {
      "get": {
        "description": "This API fetches category data using one or multiple category IDs and an optional category name.",
        "summary": "Retrieve category details by ID",
        "operationId": "RetrievecategorydetailsbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved category details",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/user/brand-mapping": {
      "post": {
        "description": "This API is used to store brand preferences for the user, which may include selected brands, geolocation, and versioning info.",
        "summary": "Save or update brand preferences for the user",
        "operationId": "Saveorupdatebrandpreferencesfortheuser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserBrandMappingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully stored brand preferences",
            "headers": {}
          },
          "400": {
            "description": "Invalid request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/location/store": {
      "get": {
        "description": "This API fetches a list of stores based on user geolocation, services, and category preferences.",
        "summary": "Retrieve nearby store locations",
        "operationId": "Retrievenearbystorelocations",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "latitude",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "longitude",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "fcmToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "validateHash",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "pincode",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "services",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved store locations",
            "headers": {}
          },
          "400": {
            "description": "Invalid request parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/location/city": {
      "get": {
        "description": "This API returns city-level location data based on the user's session and geolocation context.",
        "summary": "Retrieve available cities for user location",
        "operationId": "Retrieveavailablecitiesforuserlocation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "fcmToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "validateHash",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "isRefresh",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved city data",
            "headers": {}
          },
          "400": {
            "description": "Invalid request or missing parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "headers": {}
          }
        }
      }
    },
    "/products/plppage/filters": {
      "get": {
        "description": "This API returns the available filters (e.g., colors, customization, personalization) for the PLP based on the provided context.",
        "summary": "Get available filters for Product Listing Page (PLP)",
        "operationId": "GetavailablefiltersforProductListingPage(PLP)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "colorsOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "customization",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "personalization",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "pageName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned PLP filter data",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request query",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "headers": {}
          }
        }
      }
    },
    "/collection/lookbook/count": {
      "get": {
        "description": "Returns the number of lookbooks based on filters such as category, search keywords, pagination, and sorting criteria.",
        "summary": "Get count of collection lookbooks",
        "operationId": "Getcountofcollectionlookbooks",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "customerId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "pageNo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "categoryName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "searchWord",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "fp",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "sorting",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved lookbook count",
            "schema": {
              "$ref": "#/definitions/CollectionLookbookCountResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request or query parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/category/prefered": {
      "get": {
        "description": "This API returns the preferred product categories for a user based on gender and brand.",
        "summary": "Get user preferred categories",
        "operationId": "Getuserpreferredcategories",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "gender",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "fcmToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "brand",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "validateHash",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned preferred categories",
            "schema": {
              "$ref": "#/definitions/CategoryPreferedResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad request - missing or invalid parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/location/cityState": {
      "get": {
        "description": "This API returns the corresponding city and state for a given postcode and brand, used for auto-filling location fields during checkout or profile updates.",
        "summary": "Get city and state details based on postcode",
        "operationId": "Getcityandstatedetailsbasedonpostcode",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "postcode",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "brand",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved city and state details",
            "schema": {
              "$ref": "#/definitions/LocationCityStateResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid or missing postcode",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "headers": {}
          }
        }
      }
    },
    "/games/info": {
      "post": {
        "description": "This API provides information related to the user's eligibility and metadata for game-based campaigns (e.g., cricket promotions).",
        "summary": "Get game campaign information",
        "operationId": "Getgamecampaigninformation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GamesInfoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned game info",
            "headers": {}
          },
          "400": {
            "description": "Invalid request format",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "headers": {}
          }
        }
      }
    },
    "/review/product/categoryFits": {
      "post": {
        "description": "Returns fit information based on the selected category to help users understand sizing for reviews or purchase.",
        "summary": "Get fit guidance for a product category",
        "operationId": "Getfitguidanceforaproductcategory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReviewProductCategoryFitsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned fit information for the category",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request format or missing parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/location": {
      "post": {
        "description": "This API resolves the user’s location using IP address and geolocation to enhance personalization and service availability.",
        "summary": "Resolve user location based on IP and geo context",
        "operationId": "ResolveuserlocationbasedonIPandgeocontext",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LocationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully resolved location details",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad request - invalid or incomplete parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/location/store/call": {
      "post": {
        "description": "This API logs or processes data for a store-related action, such as contacting or locating a store, based on customer and store context.",
        "summary": "Submit store call data for a specific user and store",
        "operationId": "Submitstorecalldataforaspecificuserandstore",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LocationStoreCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged store call",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request payload",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/breadcrumbs": {
      "get": {
        "description": "Returns the breadcrumb navigation structure based on the category and shop details to help users orient within site hierarchy.",
        "summary": "Get breadcrumb trail for a category",
        "operationId": "Getbreadcrumbtrailforacategory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "shopName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "linkRewrite",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "fcmToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "validateHash",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned breadcrumb structure",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "headers": {}
          }
        }
      }
    },
    "/autocomplete": {
      "post": {
        "description": "This API provides typeahead search suggestions based on a keyword and filtering preferences such as brand, category, or product name.",
        "summary": "Fetch autocomplete suggestions",
        "operationId": "Fetchautocompletesuggestions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AutocompleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned autocomplete suggestions",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad request or missing search term",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/product/priceSizeGuide": {
      "post": {
        "description": "This API returns pricing, size fitting, and availability details for a given product, customized by category, brand, and user location.",
        "summary": "Get price and size guide details for a product",
        "operationId": "Getpriceandsizeguidedetailsforaproduct",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductPriceSizeGuideRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned price and size guide details",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "headers": {}
          }
        }
      }
    },
    "/contact/reasons": {
      "get": {
        "description": "Returns a list of predefined reasons for a user to contact customer support, filtered by brand and personalization criteria.",
        "summary": "Fetch contact reason options",
        "operationId": "Fetchcontactreasonoptions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "brand",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "personalization",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned contact reasons",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactReasonsResponse"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/contact/guestOrderDetails": {
      "post": {
        "description": "This API fetches details of an order placed by a guest (non-logged-in) user using their mobile number and order ID.",
        "summary": "Retrieve order details for a guest user",
        "operationId": "Retrieveorderdetailsforaguestuser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContactGuestOrderDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned guest order details",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid input or missing parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "headers": {}
          }
        }
      }
    },
    "/contact/orderDetails": {
      "post": {
        "description": "",
        "summary": "Retrieve order details for a registered user",
        "operationId": "Retrieveorderdetailsforaregistereduser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContactOrderDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned order details for contact support",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad request or missing/invalid parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/products/cmppage": {
      "post": {
        "description": "",
        "summary": "Get product recommendations for CMP (Content Merchandising Platform) page",
        "operationId": "GetproductrecommendationsforCMP(ContentMerchandisingPlatform)page",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductsCmppageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned CMP product recommendations",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid input data",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "description": "",
        "summary": "Log in a registered user",
        "operationId": "Loginaregistereduser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "pagetype",
            "in": "header",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User authenticated successfully",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid credentials or malformed request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/user/updateProfile": {
      "post": {
        "description": "",
        "summary": "Update user profile information",
        "operationId": "Updateuserprofileinformation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserUpdateProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid input data",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "headers": {}
          }
        }
      }
    },
    "/promotions/applyCredits": {
      "post": {
        "description": "",
        "summary": "Apply brand credits to the current cart",
        "operationId": "Applybrandcreditstothecurrentcart",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionsApplyCreditsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully applied brand credits",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request data",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/promotions/deleteCredits": {
      "post": {
        "description": "",
        "summary": "Remove brand credits from the user's cart",
        "operationId": "Removebrandcreditsfromtheuser'scart",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionsDeleteCreditsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed brand credits from cart",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request body or parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/promotions/loyalty": {
      "post": {
        "description": "",
        "summary": "Fetch available brand loyalty points",
        "operationId": "Fetchavailablebrandloyaltypoints",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionsLoyaltyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loyalty points retrieved successfully",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid input or missing parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/promotions/applyLoyalty": {
      "post": {
        "description": "",
        "summary": "Apply loyalty points to the user's cart",
        "operationId": "Applyloyaltypointstotheuser'scart",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionsApplyLoyaltyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loyalty points applied successfully",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid input data or points",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/promotions/deleteLoyalty": {
      "post": {
        "description": "Deletes previously applied loyalty points from the user's cart to recalculate pricing.",
        "summary": "Remove applied loyalty points from cart",
        "operationId": "Removeappliedloyaltypointsfromcart",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionsDeleteLoyaltyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed loyalty points from the cart",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid input or missing fields",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/contact": {
      "post": {
        "description": "",
        "summary": "Submit a support or contact request",
        "operationId": "Submitasupportorcontactrequest",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact request submitted successfully",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Missing or invalid request data",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "headers": {}
          }
        }
      }
    },
    "/contact/reopenCases": {
      "post": {
        "description": "",
        "summary": "Reopen an existing support case",
        "operationId": "Reopenanexistingsupportcase",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "brand",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "source",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "caseId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "comments",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceToken",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Case reopened successfully",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request or missing parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/contact/latestOrder": {
      "post": {
        "description": "",
        "summary": "Get the most recent order for a customer",
        "operationId": "Getthemostrecentorderforacustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContactLatestOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched latest order details",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request payload",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized or session expired",
            "headers": {}
          }
        }
      }
    },
    "/contact/feedback": {
      "post": {
        "description": "Captures feedback submitted by a user, including their contact info, geo-location, and app context.",
        "summary": "Submit feedback from a user",
        "operationId": "Submitfeedbackfromauser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContactFeedbackRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback submitted successfully",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request or missing parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/cart/moveToWishlist": {
      "post": {
        "description": "This API allows a logged-in user to transfer one or more products from their cart to their wishlist.",
        "summary": "Move products from cart to wishlist",
        "operationId": "Moveproductsfromcarttowishlist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CartMoveToWishlistRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully moved items to wishlist",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid input or missing required fields",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "headers": {}
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "description": "Terminates the current session for the logged-in user, invalidating session tokens.",
        "summary": "Logout a user",
        "operationId": "Logoutauser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserLogoutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out",
            "headers": {}
          },
          "400": {
            "description": "Invalid input or session",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized session",
            "headers": {}
          }
        }
      }
    },
    "/promotions/verifyEgv": {
      "post": {
        "description": "Validates the gift card number and PIN, checking if the voucher can be applied to the cart.",
        "summary": "Validate and verify a gift voucher (EGV)",
        "operationId": "Validateandverifyagiftvoucher(EGV)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionsVerifyEgvRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EGV verified successfully",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid gift voucher details or malformed request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/promotions/applyEgv": {
      "post": {
        "description": "",
        "summary": "Apply an E-Gift Voucher to the cart",
        "operationId": "ApplyanE-GiftVouchertothecart",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionsApplyEgvRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EGV applied successfully",
            "schema": {
              "$ref": "#/definitions/PromotionsApplyEgvResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid input or EGV details",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "headers": {}
          }
        }
      }
    },
    "/promotions/removeEgv": {
      "post": {
        "description": "This API removes a previously applied EGV from the user's cart.",
        "summary": "Remove applied E-Gift Voucher (EGV)",
        "operationId": "RemoveappliedE-GiftVoucher(EGV)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionsRemoveEgvRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EGV removed successfully",
            "schema": {
              "$ref": "#/definitions/PromotionsRemoveEgvResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/cart/delete/bulk": {
      "post": {
        "description": "",
        "summary": "Delete multiple items from the cart",
        "operationId": "Deletemultipleitemsfromthecart",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CartDeleteBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Items removed from cart successfully",
            "headers": {}
          },
          "400": {
            "description": "Invalid request format or missing parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/order/payNow": {
      "post": {
        "description": "This API is used to proceed with payment for a specific order using available details like customer ID and cart ID.",
        "summary": "Initiate payment for an order",
        "operationId": "Initiatepaymentforanorder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderPayNowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment initiated successfully",
            "schema": {
              "$ref": "#/definitions/OrderPayNowResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request or missing fields",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/products": {
      "post": {
        "description": "Fetches products based on discovery and personalization logic powered by Algonomy for the given session and filters.",
        "summary": "Fetch product data from Algonomy (Find Mode)",
        "operationId": "FetchproductdatafromAlgonomy(FindMode)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products fetched successfully",
            "headers": {}
          },
          "400": {
            "description": "Invalid input",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/user/hyperlocalSession": {
      "post": {
        "description": "Saves hyperlocal session data, including preferred store information and user location.",
        "summary": "Set user session with hyperlocal store data",
        "operationId": "Setusersessionwithhyperlocalstoredata",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserHyperlocalSessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session data saved successfully",
            "headers": {}
          },
          "400": {
            "description": "Invalid session payload",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/order/reOrder": {
      "post": {
        "description": "",
        "summary": "Reorder a previously placed order",
        "operationId": "Reorderapreviouslyplacedorder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderReOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reorder placed successfully",
            "schema": {
              "$ref": "#/definitions/OrderReOrderResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request data",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/employee/validate": {
      "post": {
        "description": "Validates an employee's details like Poornata ID, brand, and store to enable employee discounts.",
        "summary": "Validate employee credentials for discount eligibility",
        "operationId": "Validateemployeecredentialsfordiscounteligibility",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmployeeValidateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee validated successfully",
            "schema": {
              "$ref": "#/definitions/EmployeeValidateResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid employee details",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "headers": {}
          }
        }
      }
    },
    "/employee/otpVerify": {
      "post": {
        "description": "Validates the OTP sent to the employee's registered mobile number as part of the discount application process.",
        "summary": "Verify OTP for employee discount authentication",
        "operationId": "VerifyOTPforemployeediscountauthentication",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmployeeOtpVerifyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP verification successful",
            "schema": {
              "$ref": "#/definitions/EmployeeOtpVerifyResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid OTP or missing parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/employee/otpResend": {
      "post": {
        "description": "This API resends the OTP to the employee's registered mobile number for authentication purposes.",
        "summary": "Resend OTP for employee validation",
        "operationId": "ResendOTPforemployeevalidation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmployeeOtpResendRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP resent successfully",
            "schema": {
              "$ref": "#/definitions/EmployeeOtpResendResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request payload",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/employee/transaction": {
      "post": {
        "description": "",
        "summary": "Submit employee transaction data",
        "operationId": "Submitemployeetransactiondata",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmployeeTransactionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee transaction submitted successfully",
            "headers": {}
          },
          "400": {
            "description": "Invalid transaction details",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/guestSession": {
      "get": {
        "description": "",
        "summary": "Retrieve guest session data",
        "operationId": "Retrieveguestsessiondata",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Guest session retrieved successfully",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Missing or invalid session ID",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized request",
            "headers": {}
          }
        }
      }
    },
    "/guestSessionAdd": {
      "post": {
        "description": "Initializes and stores a new session for a guest user using session and device identifiers.",
        "summary": "Create a new guest session",
        "operationId": "Createanewguestsession",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GuestSessionAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Guest session created successfully",
            "schema": {
              "$ref": "#/definitions/GuestSessionAddResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid or missing session data",
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "headers": {}
          }
        }
      }
    },
    "/web/config": {
      "get": {
        "description": "Retrieves configuration data for the web platform, such as UI flags, branding preferences, or feature toggles.",
        "summary": "Fetch web configuration settings",
        "operationId": "Fetchwebconfigurationsettings",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved web config",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/promotions/recalculate": {
      "post": {
        "description": "",
        "summary": "Recalculate promotions for a cart",
        "operationId": "Recalculatepromotionsforacart",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionsRecalculateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart promotions recalculated successfully",
            "headers": {}
          },
          "400": {
            "description": "Invalid request parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/user/emailOtp": {
      "post": {
        "description": "Used for sending or verifying an OTP to the user's email during email update.",
        "summary": "Send or verify an email OTP",
        "operationId": "SendorverifyanemailOTP",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserEmailOtpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email OTP request/verification successful",
            "headers": {}
          },
          "400": {
            "description": "Bad request or validation failed",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          }
        }
      }
    },
    "/user/updateEmail": {
      "post": {
        "description": "",
        "summary": "Update the user's registered email address",
        "operationId": "Updatetheuser'sregisteredemailaddress",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserUpdateEmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email updated successfully",
            "schema": {
              "$ref": "#/definitions/UserUpdateEmailResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized access",
            "headers": {}
          }
        }
      }
    },
    "/products/plp/quickFilter": {
      "get": {
        "description": "",
        "summary": "Get available product quick filters for a category",
        "operationId": "Getavailableproductquickfiltersforacategory",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "selectedFiter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "availableFiter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "fcmToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "validateHash",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned filter data for the category",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – category ID missing or invalid",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – missing or invalid hash",
            "headers": {}
          }
        }
      }
    },
    "/order/reasons": {
      "get": {
        "description": "",
        "summary": "Get reasons for order cancellation or return",
        "operationId": "Getreasonsforordercancellationorreturn",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the list of reasons",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Missing or invalid query",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing hash token",
            "headers": {}
          }
        }
      }
    },
    "/clevertap/updateEvent": {
      "post": {
        "description": "",
        "summary": "Send custom user event or profile update to CleverTap",
        "operationId": "SendcustomusereventorprofileupdatetoCleverTap",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClevertapUpdateEventRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CleverTap event updated successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Missing or invalid data",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Missing or invalid hash token",
            "headers": {}
          }
        }
      }
    },
    "/order/exchange": {
      "post": {
        "description": "",
        "summary": "Create an exchange request for an order",
        "operationId": "Createanexchangerequestforanorder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderExchangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exchange request created successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Invalid or missing parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing hash token",
            "headers": {}
          }
        }
      }
    },
    "/monogram/productImageUpload": {
      "post": {
        "description": "",
        "summary": "Upload a monogram image for a product",
        "operationId": "Uploadamonogramimageforaproduct",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceidHeader",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetypeHeader",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetokenHeader",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hashHeader",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "multipart/form-data"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "customerId",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "cartId",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "productId",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "productAttributeId",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "monogramImage",
            "in": "formData",
            "required": false,
            "type": "file",
            "format": "file",
            "description": "Monogram image file to upload"
          },
          {
            "name": "monogramImageURL",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "type",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "W - Wishlist Image, C - Monogram Image"
          },
          {
            "name": "brand",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceId",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceType",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceToken",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Monogram image uploaded successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Missing or invalid data",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Missing or invalid hash token",
            "headers": {}
          }
        }
      }
    },
    "/user/verifyEmail": {
      "post": {
        "description": "",
        "summary": "Verify the user's email address",
        "operationId": "Verifytheuser'semailaddress",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserVerifyEmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verified successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Invalid input",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing hash",
            "headers": {}
          }
        }
      }
    },
    "/user/updateEmail/verified": {
      "post": {
        "description": "",
        "summary": "Update the user's email verification status",
        "operationId": "Updatetheuser'semailverificationstatus",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserUpdateEmailVerifiedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verification status updated successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Invalid or missing data",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing authentication token",
            "headers": {}
          }
        }
      }
    },
    "/product/customize": {
      "post": {
        "description": "",
        "summary": "Customize a product based on selected attributes",
        "operationId": "Customizeaproductbasedonselectedattributes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductCustomizeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product customization details returned successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Invalid or missing request parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing hash",
            "headers": {}
          }
        }
      }
    },
    "/games/add": {
      "post": {
        "description": "",
        "summary": "Submit a new game participation or prediction for a customer",
        "operationId": "Submitanewgameparticipationorpredictionforacustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GamesAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Game participation or prediction recorded successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Missing or invalid request data",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing authentication token",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "description": "",
        "summary": "Register a new user with required details",
        "operationId": "Registeranewuserwithrequireddetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "pagetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserRegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully registered the user",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Missing or invalid input data",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing authentication token",
            "headers": {}
          }
        }
      }
    },
    "/user/preference": {
      "post": {
        "description": "",
        "summary": "Get or update user preferences",
        "operationId": "Getorupdateuserpreferences",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserPreferenceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Preferences fetched or updated successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Missing or invalid parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing authentication token",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        }
      }
    },
    "/user/updateProfilePic": {
      "post": {
        "description": "",
        "summary": "Upload or update the profile picture of a user",
        "operationId": "Uploadorupdatetheprofilepictureofauser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceidHeader",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetokenHeader",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hashHeader",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "multipart/form-data"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "profileImage",
            "in": "formData",
            "required": false,
            "type": "file",
            "format": "file",
            "description": "The profile image file to be uploaded"
          },
          {
            "name": "customerId",
            "in": "formData",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "deviceToken",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceId",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "validateHash",
            "in": "formData",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "brand",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "dateOfBirth",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Profile picture updated successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Missing or invalid parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing authentication token",
            "headers": {}
          }
        }
      }
    },
    "/user/shopPreference": {
      "post": {
        "description": "",
        "summary": "Create or update a user’s shop-specific preferences",
        "operationId": "Createorupdateauser’sshop-specificpreferences",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserShopPreferenceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shop preferences created or updated successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Missing or invalid parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing authentication token",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error :contentReference[oaicite:0]{index=0}&#8203;:contentReference[oaicite:1]{index=1}",
            "headers": {}
          }
        }
      }
    },
    "/cart/moveToCart": {
      "post": {
        "description": "",
        "summary": "Move selected products to the cart from another list (e.g., wishlist)",
        "operationId": "Moveselectedproductstothecartfromanotherlist(e.g.,wishlist)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CartMoveToCartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products moved to cart successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Invalid or missing parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing authentication token",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        }
      }
    },
    "/order/returnImageUpload": {
      "post": {
        "description": "",
        "summary": "Upload an image for a return request",
        "operationId": "Uploadanimageforareturnrequest",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "shopidHeader",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceidHeader",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetokenHeader",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hashHeader",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "multipart/form-data"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "customerId",
            "in": "formData",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "deviceId",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceToken",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "orderId",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "orderItemId",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "returnImage",
            "in": "formData",
            "required": false,
            "type": "file",
            "format": "file",
            "description": "The return image to be uploaded"
          },
          {
            "name": "shopId",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "brand",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "validateHash",
            "in": "formData",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "hash",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Return image uploaded successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Missing or invalid parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing authentication token",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        }
      }
    },
    "/order/survey": {
      "post": {
        "description": "",
        "summary": "Submit an order survey for customer feedback",
        "operationId": "Submitanordersurveyforcustomerfeedback",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderSurveyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Survey submitted successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Missing or invalid parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing authentication token",
            "headers": {}
          }
        }
      }
    },
    "/user/deleteProfile": {
      "post": {
        "description": "",
        "summary": "Delete the user profile from the system",
        "operationId": "Deletetheuserprofilefromthesystem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDeleteProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile deleted successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Invalid or missing parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing authentication token",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        }
      }
    },
    "/order/cancel": {
      "post": {
        "description": "",
        "summary": "Cancel an existing order",
        "operationId": "Cancelanexistingorder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderCancelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order cancelled successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – missing or invalid data",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – invalid or missing authentication token",
            "headers": {}
          }
        }
      }
    },
    "/order/return": {
      "post": {
        "description": "",
        "summary": "Initiate a return request for an order item",
        "operationId": "Initiateareturnrequestforanorderitem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderReturnRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return request submitted successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – missing or invalid data",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – invalid or missing authentication token",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        }
      }
    },
    "/cart/giftMessage": {
      "post": {
        "description": "",
        "summary": "Add or update a gift message to a cart item",
        "operationId": "Addorupdateagiftmessagetoacartitem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CartGiftMessageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gift message updated successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Invalid or missing parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing authentication token",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        }
      }
    },
    "/assets/hp": {
      "get": {
        "description": "",
        "summary": "Fetch assets for the home page",
        "operationId": "Fetchassetsforthehomepage",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "device",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "capillaryUserId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "sessionId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "placements",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "rcs",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "excludeHtml",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "pref",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched home page assets",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – Invalid or missing query parameters",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – Invalid or missing authentication token",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        }
      }
    },
    "/review/reaction": {
      "post": {
        "description": "",
        "summary": "Submit or update a reaction (like/flag) to a product review",
        "operationId": "Submitorupdateareaction(like/flag)toaproductreview",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReviewReactionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reaction recorded successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – missing or invalid fields",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – invalid or missing authentication token",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error – unexpected failure",
            "headers": {}
          }
        }
      }
    },
    "/review/delete": {
      "post": {
        "description": "",
        "summary": "Delete a product review",
        "operationId": "Deleteaproductreview",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shopid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceid",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetype",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "devicetoken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "hash",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReviewDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Review deleted successfully",
            "headers": {}
          },
          "400": {
            "description": "Bad Request – missing or invalid fields",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized – invalid or missing authentication token",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "UserDeviceRequest": {
      "title": "UserDeviceRequest",
      "type": "object",
      "properties": {
        "isVisualSearch": {
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "type": "string"
        },
        "version": {
          "description": "Required. App version number",
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "type": "boolean"
        }
      },
      "required": [
        "isVisualSearch",
        "geoLocation",
        "fcmToken",
        "version"
      ]
    },
    "GeoLocation": {
      "title": "GeoLocation",
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "UserSessionRequest": {
      "title": "UserSessionRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "type": "integer",
          "format": "int32"
        },
        "restoreCartFlag": {
          "type": "boolean"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "type": "string"
        },
        "validateHash": {
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "restoreCartFlag",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "UserExistRequest": {
      "title": "UserExistRequest",
      "type": "object",
      "properties": {
        "mobileoremail": {
          "type": "string"
        },
        "inputType": {
          "example": "mobile",
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "gender": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "encodeData": {
          "example": false,
          "type": "boolean"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "type": "string"
        },
        "validateHash": {
          "type": "boolean"
        },
        "version": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "mobileoremail",
        "inputType",
        "password",
        "firstName",
        "gender",
        "encodeData",
        "geoLocation",
        "fcmToken",
        "validateHash",
        "version"
      ]
    },
    "UserRequestOtpRequest": {
      "title": "UserRequestOtpRequest",
      "type": "object",
      "properties": {
        "mobileoremail": {
          "type": "string"
        }
      },
      "required": [
        "mobileoremail"
      ]
    },
    "UserVerifyOtpRequest": {
      "title": "UserVerifyOtpRequest",
      "type": "object",
      "properties": {
        "mobileoremail": {
          "type": "string"
        },
        "otp": {
          "type": "string"
        }
      },
      "required": [
        "mobileoremail",
        "otp"
      ]
    },
    "UserInfoRequest": {
      "title": "UserInfoRequest",
      "type": "object",
      "properties": {
        "mobileoremail": {
          "type": "string"
        },
        "otp": {
          "type": "string"
        }
      },
      "required": [
        "mobileoremail",
        "otp"
      ]
    },
    "CartRequest": {
      "title": "CartRequest",
      "type": "object",
      "properties": {
        "fcmToken": {
          "example": "111",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "buyNow": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "postcode": {
          "example": "0",
          "type": "string"
        },
        "page": {
          "example": "cartSummary",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": "1.2",
          "type": "string"
        }
      },
      "required": [
        "fcmToken",
        "validateHash",
        "geoLocation",
        "buyNow",
        "customerId",
        "cartId",
        "postcode",
        "page",
        "brand",
        "version"
      ]
    },
    "LocationCoordinatesRequest": {
      "title": "LocationCoordinatesRequest",
      "type": "object",
      "properties": {
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation4"
        },
        "fcmToken": {
          "example": "111",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "geoLocation",
        "fcmToken",
        "version",
        "validateHash"
      ]
    },
    "GeoLocation4": {
      "title": "GeoLocation4",
      "type": "object",
      "properties": {
        "latitude": {
          "example": 12.9716,
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "example": 77.5946,
          "type": "number",
          "format": "double"
        }
      }
    },
    "WishlistRequest": {
      "title": "WishlistRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "pageNo": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "numOfRecords": {
          "example": 20,
          "type": "integer",
          "format": "int32"
        },
        "productIds": {
          "example": "true",
          "type": "string"
        },
        "brandShopId": {
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "someFcmToken123",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "pageNo",
        "numOfRecords",
        "productIds",
        "brand",
        "version",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "MenuResponse": {
      "title": "MenuResponse",
      "type": "object",
      "properties": {
        "menuId": {
          "description": "Unique identifier for the menu",
          "type": "integer",
          "format": "int32"
        },
        "menuName": {
          "description": "Name of the menu",
          "type": "string"
        },
        "items": {
          "description": "List of menu items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        }
      }
    },
    "Item": {
      "title": "Item",
      "type": "object",
      "properties": {
        "itemId": {
          "description": "Unique identifier for the item",
          "type": "integer",
          "format": "int32"
        },
        "itemName": {
          "description": "Name of the item",
          "type": "string"
        },
        "price": {
          "description": "Price of the item",
          "type": "number",
          "format": "double"
        },
        "available": {
          "description": "Availability status of the item",
          "type": "boolean"
        }
      }
    },
    "ProductsVhRequest": {
      "title": "ProductsVhRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "description": "Unique identifier of the customer",
          "type": "integer",
          "format": "int32"
        },
        "brandShopIds": {
          "description": "List of brand shop IDs",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "pagename": {
          "description": "Name of the page",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation6"
        },
        "fcmToken": {
          "description": "Firebase Cloud Messaging token",
          "type": "string"
        },
        "brand": {
          "description": "Brand name",
          "type": "string"
        },
        "version": {
          "description": "Version number",
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "description": "Flag to indicate if hash validation is required",
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "brandShopIds",
        "pagename",
        "geoLocation",
        "fcmToken",
        "brand",
        "version",
        "validateHash"
      ]
    },
    "GeoLocation6": {
      "title": "GeoLocation6",
      "type": "object",
      "properties": {
        "latitude": {
          "description": "Latitude coordinate",
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "latitude"
      ]
    },
    "ProductsVhResponse": {
      "title": "ProductsVhResponse",
      "type": "object",
      "properties": {
        "productId": {
          "description": "Unique identifier of the product",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Name of the product",
          "type": "string"
        },
        "description": {
          "description": "Detailed description of the product",
          "type": "string"
        },
        "price": {
          "description": "Price of the product",
          "type": "number",
          "format": "double"
        },
        "availability": {
          "description": "Availability status of the product",
          "type": "boolean"
        }
      }
    },
    "WishlistAddRequest": {
      "title": "WishlistAddRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "genderId": {
          "type": "string"
        },
        "categoryId": {
          "type": "string"
        },
        "productId": {
          "example": "366021",
          "type": "string"
        },
        "productAttributeId": {
          "type": "integer",
          "format": "int32"
        },
        "sellingPrice": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "wishlistOperation": {
          "example": "add",
          "type": "string",
          "default": "add"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "brandShopId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "monogramInitials": {
          "type": "string"
        },
        "monogramStyle": {
          "type": "string"
        },
        "monogramFont": {
          "type": "string"
        },
        "monogramColor": {
          "type": "string"
        },
        "monogramPlacement": {
          "type": "string"
        },
        "monogramImgUrl": {
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "abcd1234",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "productId",
        "wishlistOperation",
        "brand",
        "version",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "CartAddRequest": {
      "title": "CartAddRequest",
      "type": "object",
      "properties": {
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "buyNow": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 21252066,
          "type": "integer",
          "format": "int32"
        },
        "cartOperation": {
          "example": "add",
          "type": "string",
          "default": "add"
        },
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "fcmToken": {
          "example": "111",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "oldAttributeId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "example": "cartSummary",
          "type": "string"
        },
        "productAttributeId": {
          "example": 2058034,
          "type": "integer",
          "format": "int32"
        },
        "productId": {
          "example": 366020,
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "sessionId": {
          "example": "40479de86188bec732ab4be60acc52cd",
          "type": "string"
        },
        "sliderSource": {
          "type": "string"
        },
        "storeId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "utmSource": {
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "wishlistDeleteFlag": {
          "example": "0",
          "type": "string"
        },
        "monogramInitials": {
          "type": "string"
        },
        "monogramStyle": {
          "type": "string"
        },
        "monogramFont": {
          "type": "string"
        },
        "monogramColor": {
          "type": "string"
        },
        "monogramPlacement": {
          "type": "string"
        },
        "monogramImgUrl": {
          "type": "string"
        },
        "virtualStoreId": {
          "type": "string"
        }
      },
      "required": [
        "brand",
        "cartId",
        "cartOperation",
        "customerId",
        "fcmToken",
        "geoLocation",
        "productAttributeId",
        "productId",
        "quantity",
        "sessionId",
        "validateHash",
        "version"
      ]
    },
    "ProductLoyaltyRequest": {
      "title": "ProductLoyaltyRequest",
      "type": "object",
      "properties": {
        "productId": {
          "example": 3813,
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "fcm-token-example",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "productId",
        "customerId",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "ProductViewsRequest": {
      "title": "ProductViewsRequest",
      "type": "object",
      "properties": {
        "productId": {
          "example": 642623,
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "abcd1234",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "productId",
        "customerId",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "ServiceRequest": {
      "title": "ServiceRequest",
      "type": "object",
      "properties": {
        "postcode": {
          "example": 560092,
          "type": "integer",
          "format": "int32"
        },
        "storeId": {
          "example": "1",
          "type": "string"
        },
        "storeCode": {
          "example": "28092",
          "type": "string"
        },
        "customerId": {
          "example": 88,
          "type": "integer",
          "format": "int32"
        },
        "isMonogram": {
          "example": true,
          "type": "boolean"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "abcdef123456",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "postcode",
        "storeId",
        "storeCode",
        "customerId",
        "isMonogram",
        "geoLocation",
        "fcmToken",
        "validateHash",
        "version"
      ]
    },
    "CarttRequest": {
      "title": "CarttRequest",
      "type": "object",
      "properties": {
        "fcmToken": {
          "example": "111",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "buyNow": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "postcode": {
          "example": "0",
          "type": "string"
        },
        "page": {
          "example": "cartSummary",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "fcmToken",
        "validateHash",
        "geoLocation",
        "buyNow",
        "customerId",
        "cartId",
        "postcode",
        "page",
        "brand",
        "version"
      ]
    },
    "CartDeleteRequest": {
      "title": "CartDeleteRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 21252066,
          "type": "integer",
          "format": "int32"
        },
        "productId": {
          "example": 366020,
          "type": "integer",
          "format": "int32"
        },
        "productAttributeId": {
          "example": 2058034,
          "type": "integer",
          "format": "int32"
        },
        "postcode": {
          "example": "587118",
          "type": "string"
        },
        "buyNow": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "111",
          "type": "string"
        }
      },
      "required": [
        "customerId",
        "cartId",
        "productId",
        "productAttributeId",
        "postcode",
        "buyNow",
        "brand",
        "version",
        "geoLocation",
        "fcmToken"
      ]
    },
    "CarttAddRequest": {
      "title": "CarttAddRequest",
      "type": "object",
      "properties": {
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "buyNow": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 21252066,
          "type": "integer",
          "format": "int32"
        },
        "cartOperation": {
          "example": "add",
          "type": "string"
        },
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "fcmToken": {
          "example": "111",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "oldAttributeId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "example": "cartSummary",
          "type": "string"
        },
        "productAttributeId": {
          "example": 2058034,
          "type": "integer",
          "format": "int32"
        },
        "productId": {
          "example": 366020,
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "sessionId": {
          "example": "40479de86188bec732ab4be60acc52cd",
          "type": "string"
        },
        "sliderSource": {
          "type": "string"
        },
        "storeId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "utmSource": {
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "wishlistDeleteFlag": {
          "example": "0",
          "type": "string"
        },
        "monogramInitials": {
          "type": "string"
        },
        "monogramStyle": {
          "type": "string"
        },
        "monogramFont": {
          "type": "string"
        },
        "monogramColor": {
          "type": "string"
        },
        "monogramPlacement": {
          "type": "string"
        },
        "monogramImgUrl": {
          "type": "string"
        },
        "virtualStoreId": {
          "type": "string"
        }
      },
      "required": [
        "brand",
        "buyNow",
        "cartId",
        "cartOperation",
        "customerId",
        "fcmToken",
        "geoLocation",
        "page",
        "productAttributeId",
        "productId",
        "quantity",
        "sessionId",
        "validateHash",
        "version"
      ]
    },
    "CouponApplyPromoRequest": {
      "title": "CouponApplyPromoRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2670,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 7523636,
          "type": "integer",
          "format": "int32"
        },
        "promocode": {
          "example": "EMPLOYEE",
          "type": "string"
        },
        "affliatecode": {
          "example": "MFLST",
          "type": "string"
        },
        "organization": {
          "example": "MFL",
          "type": "string"
        },
        "brand": {
          "example": "PE",
          "type": "string"
        },
        "brandId": {
          "example": 5,
          "type": "integer",
          "format": "int32"
        },
        "buyNow": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "customerId",
        "cartId",
        "promocode",
        "affliatecode",
        "organization",
        "brand",
        "brandId",
        "buyNow"
      ]
    },
    "CouponDeletePromoRequest": {
      "title": "CouponDeletePromoRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2670,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 7523636,
          "type": "integer",
          "format": "int32"
        },
        "brand": {
          "example": "PE",
          "type": "string"
        },
        "brandId": {
          "example": 5,
          "type": "integer",
          "format": "int32"
        },
        "buyNow": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "customerId",
        "cartId",
        "brand",
        "brandId",
        "buyNow"
      ]
    },
    "AddressAddRequest": {
      "title": "AddressAddRequest",
      "type": "object",
      "properties": {
        "firstName": {
          "example": "John",
          "type": "string"
        },
        "lastName": {
          "example": "Doe",
          "type": "string"
        },
        "address1": {
          "example": "123 Main St",
          "type": "string"
        },
        "address2": {
          "example": "Apt 4B",
          "type": "string"
        },
        "city": {
          "example": "New York",
          "type": "string"
        },
        "state": {
          "example": "NY",
          "type": "string"
        },
        "postCode": {
          "example": "10001",
          "type": "string"
        },
        "mobile": {
          "example": "9876543210",
          "type": "string"
        },
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation4"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "AddressUpdateRequest": {
      "title": "AddressUpdateRequest",
      "type": "object",
      "properties": {
        "addressId": {
          "example": 207,
          "type": "integer",
          "format": "int32"
        },
        "firstName": {
          "example": "John",
          "type": "string"
        },
        "lastName": {
          "example": "Doe",
          "type": "string"
        },
        "stateId": {
          "example": 336,
          "type": "integer",
          "format": "int32"
        },
        "countryId": {
          "example": 110,
          "type": "integer",
          "format": "int32"
        },
        "city": {
          "example": "Varanasi",
          "type": "string"
        },
        "state": {
          "example": "Uttar Pradesh",
          "type": "string"
        },
        "address1": {
          "example": "Raipura Kamauli",
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "address4": {
          "type": "string"
        },
        "addressType": {
          "example": "Residential",
          "type": "string"
        },
        "landmark": {
          "example": "Primary School",
          "type": "string"
        },
        "postCode": {
          "example": "221112",
          "type": "string"
        },
        "mobile": {
          "example": "9876543210",
          "type": "string"
        },
        "defaultAddress": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "alias": {
          "example": "home asd",
          "type": "string"
        },
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation4"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "addressId",
        "firstName",
        "lastName",
        "stateId",
        "countryId",
        "city",
        "state",
        "address1",
        "addressType",
        "postCode",
        "mobile",
        "defaultAddress",
        "alias",
        "customerId",
        "geoLocation",
        "fcmToken",
        "brand",
        "version",
        "validateHash"
      ]
    },
    "CartUpdateAddressRequest": {
      "title": "CartUpdateAddressRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "storeId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 21252066,
          "type": "integer",
          "format": "int32"
        },
        "buyNow": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "shippingAddressId": {
          "example": 2555162161,
          "type": "integer",
          "format": "int64"
        },
        "invoiceAddressId": {
          "example": 2555162161,
          "type": "integer",
          "format": "int64"
        },
        "mode": {
          "type": "string"
        },
        "storeCode": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "cartId",
        "shippingAddressId",
        "invoiceAddressId",
        "geoLocation",
        "fcmToken",
        "brand",
        "validateHash"
      ]
    },
    "AddressDeleteRequest": {
      "title": "AddressDeleteRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "addressId": {
          "example": 1250582,
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation4"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        }
      },
      "required": [
        "customerId",
        "addressId",
        "version",
        "geoLocation",
        "fcmToken",
        "brand"
      ]
    },
    "UserCreditsRequest": {
      "title": "UserCreditsRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 131,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "someFcmToken123",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "geoLocation",
        "fcmToken",
        "brand",
        "version",
        "validateHash"
      ]
    },
    "CreditsHistoryRequest": {
      "title": "CreditsHistoryRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2048,
          "type": "integer",
          "format": "int32"
        },
        "dateSort": {
          "example": "Date Desc",
          "type": "string"
        },
        "brandShopId": {
          "example": 6,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "UserLoyaltyProgressbarRequest": {
      "title": "UserLoyaltyProgressbarRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 1961406,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "geoLocation",
        "fcmToken",
        "brand",
        "version"
      ]
    },
    "UserLoyaltyTransactionsRequest": {
      "title": "UserLoyaltyTransactionsRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "yourFcmToken",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "PaymentTokenizedCardRequest": {
      "title": "PaymentTokenizedCardRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": "26",
          "type": "string"
        },
        "cartId": {
          "example": "520",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "WishlisttRequest": {
      "title": "WishlisttRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "pageNo": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "numOfRecords": {
          "example": 20,
          "type": "integer",
          "format": "int32"
        },
        "productIds": {
          "example": "true",
          "type": "string"
        },
        "brandShopId": {
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "someFcmToken123",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "pageNo",
        "numOfRecords",
        "productIds",
        "brand",
        "version",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "WishlistDeleteRequest": {
      "title": "WishlistDeleteRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "productId": {
          "example": "626538,597347",
          "type": "string"
        },
        "productAttributeId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "WishlistttRequest": {
      "title": "WishlistttRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "pageNo": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "numOfRecords": {
          "example": 20,
          "type": "integer",
          "format": "int32"
        },
        "productIds": {
          "example": "true",
          "type": "string"
        },
        "brandShopId": {
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "someFcmToken123",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "pageNo",
        "numOfRecords",
        "productIds",
        "brand",
        "version",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "ReviewListRequest": {
      "title": "ReviewListRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": "2048",
          "type": "string"
        },
        "searchOrderId": {
          "example": "260000077",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "brandShopId": {
          "type": "string"
        },
        "limit": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "offSet": {
          "example": 3,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "asdfasda",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "OrderRequest": {
      "title": "OrderRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "brandId": {
          "example": "0",
          "type": "string"
        },
        "searchWord": {
          "type": "string"
        },
        "orderStatus": {
          "type": "string"
        },
        "groupStatus": {
          "example": true,
          "type": "boolean"
        },
        "orderId": {
          "type": "string"
        },
        "offSet": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "example": 100,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "limit",
        "geoLocation",
        "fcmToken",
        "brand",
        "validateHash"
      ]
    },
    "OrderDetailsRequest": {
      "title": "OrderDetailsRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "pageName": {
          "example": "myOrders",
          "type": "string"
        },
        "uniqueId": {
          "example": "150075180-7500011-0-0-3-1",
          "type": "string"
        },
        "priceUniqueId": {
          "example": "0-0-0-0",
          "type": "string"
        },
        "orderId": {
          "example": "787683060",
          "type": "string"
        },
        "groupStatus": {
          "example": true,
          "type": "boolean"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "orderId",
        "geoLocation",
        "fcmToken",
        "brand",
        "validateHash"
      ]
    },
    "UserCartCountRequest": {
      "title": "UserCartCountRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 60,
          "type": "integer",
          "format": "int32"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "fcmToken": {
          "example": "111",
          "type": "string"
        },
        "version": {
          "example": "1.2",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation4"
        },
        "deviceid": {
          "example": "019342a9-e90c-744b-bc31-e9826a1666ee",
          "type": "string"
        },
        "devicetoken": {
          "example": "3edfe97236cae0bf7b1e10afefd8c10c.1731990250",
          "type": "string"
        },
        "hash": {
          "example": "samplehashvalue",
          "type": "string"
        }
      }
    },
    "NewsletterRequest": {
      "title": "NewsletterRequest",
      "type": "object",
      "properties": {
        "mobileoremail": {
          "example": "ashok.kumar@borngroup.com",
          "type": "string"
        },
        "active": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "sessionId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "mobileoremail",
        "active",
        "geoLocation",
        "fcmToken",
        "validateHash",
        "version"
      ]
    },
    "ProductNotifyRequest": {
      "title": "ProductNotifyRequest",
      "type": "object",
      "properties": {
        "productId": {
          "example": 111,
          "type": "integer",
          "format": "int32"
        },
        "productAttributeId": {
          "example": 222,
          "type": "integer",
          "format": "int32"
        },
        "emailId": {
          "example": "example@email.com",
          "type": "string"
        },
        "mobile": {
          "example": 7777777777,
          "type": "integer",
          "format": "int64"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "asdfasda",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "productId",
        "productAttributeId",
        "emailId",
        "mobile",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "AddressRequest": {
      "title": "AddressRequest",
      "type": "object",
      "properties": {
        "cartId": {
          "example": 21252027,
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "example": "checkout",
          "type": "string"
        },
        "latitude": {
          "example": "12.969807",
          "type": "string"
        },
        "longitude": {
          "example": "77.749962",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        }
      }
    },
    "UserUpdateCartRequest": {
      "title": "UserUpdateCartRequest",
      "type": "object",
      "properties": {
        "cartId": {
          "example": 21251821,
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "example": 2937700,
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "example": "cartSummary",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "cartId",
        "customerId",
        "page",
        "geoLocation",
        "fcmToken",
        "brand",
        "version",
        "validateHash"
      ]
    },
    "OrderArrivingRequest": {
      "title": "OrderArrivingRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2048,
          "type": "integer",
          "format": "int32"
        },
        "offSet": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "example": 20,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "offSet",
        "limit",
        "geoLocation",
        "fcmToken",
        "brand",
        "validateHash"
      ]
    },
    "UserBrandMappingRequest": {
      "title": "UserBrandMappingRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "geoLocation",
        "fcmToken",
        "brand",
        "version",
        "validateHash"
      ]
    },
    "CollectionLookbookCountResponse": {
      "title": "CollectionLookbookCountResponse",
      "type": "object",
      "properties": {
        "count": {
          "example": 10,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CategoryPreferedResponse": {
      "title": "CategoryPreferedResponse",
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Category"
          }
        }
      }
    },
    "Category": {
      "title": "Category",
      "type": "object",
      "properties": {
        "gender": {
          "type": "string"
        },
        "categoryList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LocationCityStateResponse": {
      "title": "LocationCityStateResponse",
      "type": "object",
      "properties": {
        "city": {
          "example": "Bangalore",
          "type": "string"
        },
        "state": {
          "example": "Karnataka",
          "type": "string"
        }
      }
    },
    "GamesInfoRequest": {
      "title": "GamesInfoRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2936221,
          "type": "integer",
          "format": "int32"
        },
        "expressDelivery": {
          "example": true,
          "type": "boolean"
        },
        "cricketCampaign": {
          "example": true,
          "type": "boolean"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "asdfasda",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "expressDelivery",
        "cricketCampaign",
        "version",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "ReviewProductCategoryFitsRequest": {
      "title": "ReviewProductCategoryFitsRequest",
      "type": "object",
      "properties": {
        "categoryId": {
          "example": "145",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "asdfasda",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "categoryId",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "LocationRequest": {
      "title": "LocationRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "ipAddress": {
          "example": "117.248.35.71",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "ipAddress",
        "brand",
        "geoLocation",
        "fcmToken",
        "version",
        "validateHash"
      ]
    },
    "LocationStoreCallRequest": {
      "title": "LocationStoreCallRequest",
      "type": "object",
      "properties": {
        "mobile": {
          "example": 9952886854,
          "type": "integer",
          "format": "int64"
        },
        "storeId": {
          "example": 12223,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "mobile",
        "storeId",
        "geoLocation",
        "fcmToken",
        "brand",
        "version",
        "validateHash"
      ]
    },
    "AutocompleteRequest": {
      "title": "AutocompleteRequest",
      "type": "object",
      "properties": {
        "cartId": {
          "example": 7525645,
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "sessionId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "searchword": {
          "example": "shirt",
          "type": "string"
        },
        "filter": {
          "example": "type:BRAND OR type:CATEGORY OR type:DefaultCategoryName OR type:PRODUCT",
          "type": "string"
        },
        "rows": {
          "example": 5,
          "type": "integer",
          "format": "int32"
        },
        "regionId": {
          "example": "KA",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "asdfasda",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "searchword",
        "filter",
        "regionId",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "ProductPriceSizeGuideRequest": {
      "title": "ProductPriceSizeGuideRequest",
      "type": "object",
      "properties": {
        "productId": {
          "example": 715787,
          "type": "integer",
          "format": "int32"
        },
        "storeId": {
          "example": "26845",
          "type": "string"
        },
        "categoryName": {
          "example": "Polo T-Shirts",
          "type": "string"
        },
        "gender": {
          "example": "Men",
          "type": "string"
        },
        "subBrand": {
          "example": "Van Heusen",
          "type": "string"
        },
        "fit": {
          "type": "string"
        },
        "brandFit": {
          "type": "string"
        },
        "productType": {
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "productId",
        "storeId",
        "categoryName",
        "gender",
        "subBrand",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "ContactReasonsResponse": {
      "title": "ContactReasonsResponse",
      "type": "object",
      "properties": {
        "reasonId": {
          "example": 101,
          "type": "integer",
          "format": "int32"
        },
        "reasonText": {
          "example": "Order not delivered",
          "type": "string"
        }
      }
    },
    "ContactGuestOrderDetailsRequest": {
      "title": "ContactGuestOrderDetailsRequest",
      "type": "object",
      "properties": {
        "mobile": {
          "example": 8778580693,
          "type": "integer",
          "format": "int64"
        },
        "orderId": {
          "example": 260003271,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "asdfasda",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "mobile",
        "orderId",
        "geoLocation",
        "fcmToken",
        "brand",
        "version",
        "validateHash"
      ]
    },
    "ContactOrderDetailsRequest": {
      "title": "ContactOrderDetailsRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": "24",
          "type": "string"
        },
        "orderId": {
          "example": 150113112,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "asdfasda",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "orderId",
        "geoLocation",
        "fcmToken",
        "brand",
        "version",
        "validateHash"
      ]
    },
    "ProductsCmppageRequest": {
      "title": "ProductsCmppageRequest",
      "type": "object",
      "properties": {
        "brand": {
          "example": "allensolly",
          "type": "string"
        },
        "customerId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "categoryId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "capillaryUserId": {
          "example": "512450342",
          "type": "string"
        },
        "sessionId": {
          "example": "fdc4cb70dbf27230c220814397105554",
          "type": "string"
        },
        "rcs": {
          "example": "eF5j4cotK8l...",
          "type": "string"
        },
        "regionId": {
          "example": "UL",
          "type": "string"
        },
        "rid": {
          "example": "UL",
          "type": "string"
        },
        "utmSource": {
          "type": "string"
        },
        "requestMode": {
          "example": "context",
          "type": "string"
        },
        "placementContext": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlacementContext"
          }
        },
        "isVisualSearch": {
          "example": "0",
          "type": "string"
        },
        "version": {
          "example": "1.2",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation4"
        },
        "fcmToken": {
          "example": "111",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "brand",
        "customerId",
        "cartId",
        "categoryId",
        "capillaryUserId",
        "sessionId",
        "rcs",
        "regionId",
        "rid",
        "requestMode",
        "placementContext",
        "version",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "PlacementContext": {
      "title": "PlacementContext",
      "type": "object",
      "properties": {
        "placementName": {
          "example": "home_page.recs_2_desktop",
          "type": "string"
        },
        "categoryId": {
          "example": "71",
          "type": "string"
        },
        "strategies": {
          "type": "string"
        }
      }
    },
    "UserLoginRequest": {
      "title": "UserLoginRequest",
      "type": "object",
      "properties": {
        "mobileoremail": {
          "example": "9998887770",
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "socialLogin": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "socialLoginType": {
          "type": "string"
        },
        "socialLoginId": {
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "mobileoremail",
        "geoLocation",
        "fcmToken",
        "version",
        "validateHash"
      ]
    },
    "UserUpdateProfileRequest": {
      "title": "UserUpdateProfileRequest",
      "type": "object",
      "properties": {
        "gender": {
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "firstName": {
          "example": "SG",
          "type": "string"
        },
        "lastName": {
          "example": "GS",
          "type": "string"
        },
        "dateOfBirth": {
          "example": "1998-01-08",
          "type": "string",
          "format": "date"
        },
        "email_subscription": {
          "example": "0",
          "type": "string"
        },
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "gender",
        "firstName",
        "lastName",
        "dateOfBirth",
        "customerId",
        "geoLocation",
        "fcmToken",
        "brand",
        "version",
        "validateHash"
      ]
    },
    "PromotionsApplyCreditsRequest": {
      "title": "PromotionsApplyCreditsRequest",
      "type": "object",
      "properties": {
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "customerId": {
          "example": 2834,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 25208590,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation4"
        },
        "latitude": {
          "example": 12.956629,
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "example": 77.704681,
          "type": "number",
          "format": "double"
        },
        "fcmToken": {
          "example": "111",
          "type": "string"
        },
        "version": {
          "example": "1.2",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        },
        "sessionId": {
          "example": "32d6372881503e431ab1421a991d14ee",
          "type": "string"
        },
        "utmSource": {
          "type": "string"
        },
        "buyNow": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "brandCredits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrandCredit"
          }
        }
      },
      "required": [
        "brand",
        "customerId",
        "cartId",
        "geoLocation",
        "fcmToken",
        "version",
        "validateHash",
        "sessionId",
        "brandCredits"
      ]
    },
    "BrandCredit": {
      "title": "BrandCredit",
      "type": "object",
      "properties": {
        "brandId": {
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "points": {
          "example": "2355.00",
          "type": "string"
        }
      }
    },
    "PromotionsDeleteCreditsRequest": {
      "title": "PromotionsDeleteCreditsRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 626,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 7527052,
          "type": "integer",
          "format": "int32"
        },
        "buyNow": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "brandIds": {
          "example": [
            2,
            3,
            5,
            6
          ],
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "cartId",
        "brandIds",
        "brand",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "PromotionsLoyaltyRequest": {
      "title": "PromotionsLoyaltyRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 7524924,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "cartId",
        "geoLocation",
        "fcmToken",
        "brand",
        "validateHash"
      ]
    },
    "PromotionsApplyLoyaltyRequest": {
      "title": "PromotionsApplyLoyaltyRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 626,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 7527052,
          "type": "integer",
          "format": "int32"
        },
        "buyNow": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "brandLoyalty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrandLoyalty"
          }
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "cartId",
        "brandLoyalty",
        "brand",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "BrandLoyalty": {
      "title": "BrandLoyalty",
      "type": "object",
      "properties": {
        "shopId": {
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "points": {
          "example": 4250,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PromotionsDeleteLoyaltyRequest": {
      "title": "PromotionsDeleteLoyaltyRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 7524924,
          "type": "integer",
          "format": "int32"
        },
        "points": {
          "example": "5",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "cartId",
        "points",
        "geoLocation",
        "fcmToken",
        "brand",
        "validateHash"
      ]
    },
    "ContactRequest": {
      "title": "ContactRequest",
      "type": "object",
      "properties": {
        "name": {
          "example": "Abhi",
          "type": "string"
        },
        "mobile": {
          "example": "7625013233",
          "type": "string"
        },
        "email": {
          "example": "abhijeetbanerjee1203@gmail.com",
          "type": "string"
        },
        "issueDetails": {
          "example": "Testing",
          "type": "string"
        },
        "query": {
          "example": "Item not as expected",
          "type": "string"
        },
        "queryDetails": {
          "example": "Not as expected",
          "type": "string"
        },
        "source": {
          "example": "app",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "productCategory": {
          "example": "Shirts",
          "type": "string"
        },
        "productSize": {
          "example": "XL",
          "type": "string"
        },
        "productPrice": {
          "example": "1300",
          "type": "string"
        },
        "productId": {
          "example": "43422",
          "type": "string"
        },
        "productEan": {
          "example": "34534543",
          "type": "string"
        },
        "productSubBrand": {
          "example": "AS",
          "type": "string"
        },
        "productStyleId": {
          "example": "tty",
          "type": "string"
        },
        "productFit": {
          "example": "m",
          "type": "string"
        },
        "productSubCategory": {
          "example": "Allen Solly",
          "type": "string"
        },
        "version": {
          "example": "1.0.1",
          "type": "string"
        },
        "fcm": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "deviceId": {
          "example": "{{deviceId}}",
          "type": "string"
        },
        "deviceToken": {
          "example": "{{deviceToken}}",
          "type": "string"
        },
        "deviceType": {
          "example": "{{deviceApp}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "mobile",
        "email",
        "issueDetails",
        "query",
        "source",
        "brand",
        "productId",
        "version",
        "fcm",
        "deviceId",
        "deviceToken",
        "deviceType",
        "validateHash"
      ]
    },
    "ContactLatestOrderRequest": {
      "title": "ContactLatestOrderRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": "24",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "asdfasda",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "geoLocation",
        "fcmToken",
        "brand",
        "version",
        "validateHash"
      ]
    },
    "ContactFeedbackRequest": {
      "title": "ContactFeedbackRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": "1",
          "type": "string"
        },
        "phoneNumber": {
          "example": 9952886854,
          "type": "integer",
          "format": "int64"
        },
        "emailId": {
          "example": "malavika.goli@madura.adityabirla.com",
          "type": "string"
        },
        "pageNo": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "asdfasda",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "phoneNumber",
        "emailId",
        "pageNo",
        "geoLocation",
        "fcmToken",
        "brand",
        "version",
        "validateHash"
      ]
    },
    "CartMoveToWishlistRequest": {
      "title": "CartMoveToWishlistRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2937700,
          "type": "integer",
          "format": "int32"
        },
        "pageName": {
          "example": "cartSummary",
          "type": "string"
        },
        "cartId": {
          "example": "21251821",
          "type": "string"
        },
        "isDeleteFromCart": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "cartId",
        "products",
        "brand",
        "version",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "Product": {
      "title": "Product",
      "type": "object",
      "properties": {
        "productId": {
          "example": 150,
          "type": "integer",
          "format": "int32"
        },
        "productAttributeId": {
          "example": 3506,
          "type": "integer",
          "format": "int32"
        },
        "categoryId": {
          "example": 160,
          "type": "integer",
          "format": "int32"
        },
        "sellingPrice": {
          "example": "23",
          "type": "string"
        },
        "genderId": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "brandShopId": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "monogramInitials": {
          "type": "string"
        },
        "monogramStyle": {
          "type": "string"
        },
        "monogramFont": {
          "type": "string"
        },
        "monogramColor": {
          "type": "string"
        },
        "monogramPlacement": {
          "type": "string"
        },
        "monogramImgUrl": {
          "type": "string"
        }
      }
    },
    "UserLogoutRequest": {
      "title": "UserLogoutRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "customerId",
        "geoLocation",
        "fcmToken",
        "validateHash",
        "version"
      ]
    },
    "PromotionsVerifyEgvRequest": {
      "title": "PromotionsVerifyEgvRequest",
      "type": "object",
      "properties": {
        "cartId": {
          "example": 7524924,
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "gcnumber": {
          "example": "9109511014693078",
          "type": "string"
        },
        "gcpin": {
          "example": "159803",
          "type": "string"
        },
        "apply_amount": {
          "example": 500,
          "type": "number",
          "format": "double"
        },
        "brandShopId": {
          "example": 6,
          "type": "integer",
          "format": "int32"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "cartId",
        "customerId",
        "gcnumber",
        "gcpin",
        "apply_amount",
        "brandShopId",
        "brand",
        "version",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "PromotionsApplyEgvRequest": {
      "title": "PromotionsApplyEgvRequest",
      "type": "object",
      "properties": {
        "cartId": {
          "example": 7524924,
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "gcnumber": {
          "example": "9109511018644764",
          "type": "string"
        },
        "gcpin": {
          "example": "129420",
          "type": "string"
        },
        "apply_amount": {
          "example": 500,
          "type": "number",
          "format": "double"
        },
        "brandShopId": {
          "example": 6,
          "type": "integer",
          "format": "int32"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "cartId",
        "customerId",
        "gcnumber",
        "gcpin",
        "apply_amount",
        "brandShopId",
        "brand",
        "version",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "PromotionsApplyEgvResponse": {
      "title": "PromotionsApplyEgvResponse",
      "type": "object",
      "properties": {
        "status": {
          "example": "success",
          "type": "string"
        },
        "message": {
          "example": "EGV applied to cart",
          "type": "string"
        }
      }
    },
    "PromotionsRemoveEgvRequest": {
      "title": "PromotionsRemoveEgvRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 626,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 7527052,
          "type": "integer",
          "format": "int32"
        },
        "buyNow": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "cartId",
        "brand",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "PromotionsRemoveEgvResponse": {
      "title": "PromotionsRemoveEgvResponse",
      "type": "object",
      "properties": {
        "message": {
          "example": "EGV removed",
          "type": "string"
        }
      }
    },
    "CartDeleteBulkRequest": {
      "title": "CartDeleteBulkRequest",
      "type": "object",
      "properties": {
        "cartId": {
          "example": 7523548,
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "productAndAttributeId": {
          "example": "311690_1747353, 666311_3874417",
          "type": "string"
        },
        "postcode": {
          "example": "800007",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "cartId",
        "customerId",
        "productAndAttributeId",
        "brand",
        "version",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "OrderPayNowRequest": {
      "title": "OrderPayNowRequest",
      "type": "object",
      "properties": {
        "cartId": {
          "example": 12345678,
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "example": 98765,
          "type": "integer",
          "format": "int32"
        },
        "paymentMethod": {
          "example": "PAYU",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "cartId",
        "customerId",
        "paymentMethod",
        "geoLocation",
        "fcmToken",
        "brand",
        "validateHash"
      ]
    },
    "OrderPayNowResponse": {
      "title": "OrderPayNowResponse",
      "type": "object",
      "properties": {
        "message": {
          "example": "Redirect to payment gateway",
          "type": "string"
        }
      }
    },
    "ProductsRequest": {
      "title": "ProductsRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2573,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 22558798,
          "type": "integer",
          "format": "int32"
        },
        "categoryId": {
          "example": 457,
          "type": "integer",
          "format": "int32"
        },
        "capillaryUserId": {
          "example": "534440898",
          "type": "string"
        },
        "storeId": {
          "example": "34518",
          "type": "string"
        },
        "sessionId": {
          "example": "8c3ea7f607e5a83577c158f01a95e63d",
          "type": "string"
        },
        "requestMode": {
          "example": "find",
          "type": "string"
        },
        "placementsType": {
          "example": "search_page.find_newarrivals_desktop",
          "type": "string"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regionId": {
          "example": "UL",
          "type": "string"
        },
        "searchTerm": {
          "example": "*",
          "type": "string"
        },
        "limit": {
          "example": 32,
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "rcs": {
          "example": "eF5jY...",
          "type": "string"
        },
        "querystr": {
          "example": "spellcheck=hits&facet=Gender&...",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "111",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        },
        "IS_ALGONOMY_LOG_ENABLED": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "cartId",
        "categoryId",
        "sessionId",
        "requestMode",
        "placementsType",
        "regionId",
        "searchTerm",
        "limit",
        "offset",
        "page",
        "rcs",
        "querystr",
        "version",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "UserHyperlocalSessionRequest": {
      "title": "UserHyperlocalSessionRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": "24",
          "type": "string"
        },
        "session": {
          "$ref": "#/definitions/Session"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "session",
        "brand",
        "geoLocation",
        "fcmToken",
        "version",
        "validateHash"
      ]
    },
    "Session": {
      "title": "Session",
      "type": "object",
      "properties": {
        "storeData": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StoreData"
          }
        },
        "pincode": {
          "example": "561025",
          "type": "string"
        },
        "addressId": {
          "example": "1",
          "type": "string"
        },
        "address": {
          "example": "Brigad,Shanthala Nagar, Ashok Nagar, Bengaluru, Karnataka, India",
          "type": "string"
        },
        "lat": {
          "example": 13.9709909,
          "type": "number",
          "format": "double"
        },
        "long": {
          "example": 78.6068996,
          "type": "number",
          "format": "double"
        }
      }
    },
    "StoreData": {
      "title": "StoreData",
      "type": "object",
      "properties": {
        "storeId": {
          "example": "29029",
          "type": "string"
        },
        "expiryDate": {
          "example": "1663915411.776",
          "type": "string"
        },
        "switchMode": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "OrderReOrderRequest": {
      "title": "OrderReOrderRequest",
      "type": "object",
      "properties": {
        "orderId": {
          "example": 260001048,
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "orderId",
        "customerId",
        "brand",
        "version",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "OrderReOrderResponse": {
      "title": "OrderReOrderResponse",
      "type": "object",
      "properties": {
        "message": {
          "example": "Reorder successful",
          "type": "string"
        }
      }
    },
    "EmployeeValidateRequest": {
      "title": "EmployeeValidateRequest",
      "type": "object",
      "properties": {
        "poornataId": {
          "example": "283311",
          "type": "string"
        },
        "discountType": {
          "example": "EmployeeQuota",
          "type": "string"
        },
        "brandName": {
          "example": "LP",
          "type": "string"
        },
        "storeCode": {
          "example": "ABFRLONLINE",
          "type": "string"
        },
        "organization": {
          "example": "MFL",
          "type": "string"
        },
        "mobileNo": {
          "example": 8778580693,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "poornataId",
        "discountType",
        "brandName",
        "storeCode",
        "organization",
        "mobileNo"
      ]
    },
    "EmployeeValidateResponse": {
      "title": "EmployeeValidateResponse",
      "type": "object",
      "properties": {
        "status": {
          "example": "Valid",
          "type": "string"
        }
      }
    },
    "EmployeeOtpVerifyRequest": {
      "title": "EmployeeOtpVerifyRequest",
      "type": "object",
      "properties": {
        "poornataId": {
          "example": "283311",
          "type": "string"
        },
        "discountType": {
          "example": "EmployeeQuota",
          "type": "string"
        },
        "brandName": {
          "example": "LP",
          "type": "string"
        },
        "storeCode": {
          "example": "ABFRLONLINE",
          "type": "string"
        },
        "organization": {
          "example": "MFL",
          "type": "string"
        },
        "mobileNo": {
          "example": 8778580693,
          "type": "integer",
          "format": "int64"
        },
        "customerOTP": {
          "example": 502850,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "poornataId",
        "discountType",
        "brandName",
        "storeCode",
        "organization",
        "mobileNo",
        "customerOTP"
      ]
    },
    "EmployeeOtpVerifyResponse": {
      "title": "EmployeeOtpVerifyResponse",
      "type": "object",
      "properties": {
        "status": {
          "example": "verified",
          "type": "string"
        }
      }
    },
    "EmployeeOtpResendRequest": {
      "title": "EmployeeOtpResendRequest",
      "type": "object",
      "properties": {
        "poornataId": {
          "example": "Test0002",
          "type": "string"
        },
        "discountType": {
          "example": "EmployeeQuota",
          "type": "string"
        },
        "brandName": {
          "example": "LP",
          "type": "string"
        },
        "storeCode": {
          "example": "L002",
          "type": "string"
        },
        "organization": {
          "example": "MFL",
          "type": "string"
        },
        "mobileNo": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "poornataId",
        "discountType",
        "brandName",
        "storeCode",
        "organization",
        "mobileNo"
      ]
    },
    "EmployeeOtpResendResponse": {
      "title": "EmployeeOtpResendResponse",
      "type": "object",
      "properties": {
        "message": {
          "example": "OTP has been resent",
          "type": "string"
        }
      }
    },
    "EmployeeTransactionRequest": {
      "title": "EmployeeTransactionRequest",
      "type": "object",
      "properties": {
        "poornataId": {
          "example": "Test0002",
          "type": "string"
        },
        "discountType": {
          "example": "EmployeeQuota",
          "type": "string"
        },
        "brandName": {
          "example": "LP",
          "type": "string"
        },
        "storeCode": {
          "example": "L002",
          "type": "string"
        },
        "organization": {
          "example": "MFL",
          "type": "string"
        },
        "mobileNo": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "posTransactionId": {
          "example": "P015ED403I212153",
          "type": "string"
        },
        "totalTransactionValue": {
          "example": 2000,
          "type": "number",
          "format": "double"
        },
        "quotaMRPAvailed": {
          "example": 1615,
          "type": "number",
          "format": "double"
        },
        "quotaQuantityAvailed": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "quotaAmountAvailed": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "quotaNetAmountAvailed": {
          "example": 1615,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "poornataId",
        "discountType",
        "brandName",
        "storeCode",
        "organization",
        "mobileNo",
        "posTransactionId",
        "totalTransactionValue",
        "quotaMRPAvailed",
        "quotaQuantityAvailed",
        "quotaAmountAvailed",
        "quotaNetAmountAvailed"
      ]
    },
    "GuestSessionAddRequest": {
      "title": "GuestSessionAddRequest",
      "type": "object",
      "properties": {
        "session_id": {
          "example": "9c75d65c-53a3-4d63-9540-61b62a8c0e3a",
          "type": "string"
        },
        "dev_id": {
          "example": "9c75d65c-53a3-4d63-9540-61b62a8c0e3a",
          "type": "string"
        },
        "dev_token": {
          "example": "3625e28c5bf1a9022ff188c78d2ac8b2.1668439670",
          "type": "string"
        },
        "hash": {
          "example": "3625e28c5bf1a9022ff188c78d2ac8b2",
          "type": "string"
        },
        "exp_date": {
          "example": 1668526018.8,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "session_id",
        "dev_id",
        "dev_token",
        "hash",
        "exp_date"
      ]
    },
    "GuestSessionAddResponse": {
      "title": "GuestSessionAddResponse",
      "type": "object",
      "properties": {
        "status": {
          "example": "success",
          "type": "string"
        }
      }
    },
    "PromotionsRecalculateRequest": {
      "title": "PromotionsRecalculateRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 118,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 1816,
          "type": "integer",
          "format": "int32"
        },
        "brandCredits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrandCredit1"
          }
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation4"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "cartId",
        "brandCredits",
        "brand",
        "geoLocation",
        "fcmToken",
        "validateHash"
      ]
    },
    "BrandCredit1": {
      "title": "BrandCredit1",
      "type": "object",
      "properties": {
        "brandId": {
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "points": {
          "example": 2355,
          "type": "number",
          "format": "double"
        }
      }
    },
    "UserEmailOtpRequest": {
      "title": "UserEmailOtpRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "email": {
          "example": "srg123456@gmail.com",
          "type": "string"
        },
        "mode": {
          "example": "emailUpdate",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "email",
        "mode",
        "geoLocation",
        "fcmToken",
        "brand",
        "version",
        "validateHash"
      ]
    },
    "UserUpdateEmailRequest": {
      "title": "UserUpdateEmailRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "email": {
          "example": "srg123@gmail.com",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "email",
        "geoLocation",
        "fcmToken",
        "brand",
        "version",
        "validateHash"
      ]
    },
    "UserUpdateEmailResponse": {
      "title": "UserUpdateEmailResponse",
      "type": "object",
      "properties": {
        "message": {
          "example": "Email updated",
          "type": "string"
        }
      }
    },
    "ClevertapUpdateEventRequest": {
      "title": "ClevertapUpdateEventRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2670,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": 7523636,
          "type": "integer",
          "format": "int32"
        },
        "eventData": {
          "$ref": "#/definitions/EventData"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "brandShopId": {
          "example": 6,
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "your-fcm-token",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "EventData": {
      "title": "EventData",
      "type": "object",
      "properties": {
        "objectId": {
          "example": "25b08803c1af4e00839f530264dac6f8",
          "type": "string"
        },
        "type": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            },
            {
              "example": "profile"
            }
          ]
        },
        "profileData": {
          "example": {
            "Name": "Jack Test 5"
          },
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Type": {
      "title": "Type",
      "example": "profile",
      "type": "string",
      "enum": [
        "profile",
        "event"
      ]
    },
    "OrderExchangeRequest": {
      "title": "OrderExchangeRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "orderId": {
          "example": 150113112,
          "type": "integer",
          "format": "int32"
        },
        "addressId": {
          "example": 1250584,
          "type": "integer",
          "format": "int32"
        },
        "pickupType": {
          "type": "string"
        },
        "itemQuantity": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "returnInfo": {
          "$ref": "#/definitions/ReturnInfo"
        },
        "exchangeItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeItem"
          }
        },
        "itemInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemInfo"
          }
        },
        "refundToUpi": {
          "example": false,
          "type": "boolean"
        },
        "refundToBankAccount": {
          "example": false,
          "type": "boolean"
        },
        "backToSource": {
          "example": false,
          "type": "boolean"
        },
        "shipmentUuid": {
          "example": "838901f9-812a-435c-8677-3ed5afb0a086",
          "type": "string"
        },
        "awb": {
          "example": "227439363283",
          "type": "string"
        },
        "domain": {
          "example": "vanheusenindia",
          "type": "string"
        },
        "source": {
          "example": "API",
          "type": "string"
        },
        "token": {
          "example": "a86b9fad7b2decca9ba3a5b06ff4eb1455aff418",
          "type": "string"
        },
        "selfShipped": {
          "example": false,
          "type": "boolean"
        },
        "returnMode": {
          "example": "EXCHANGE",
          "type": "string"
        },
        "sessionId": {
          "example": "286e02308830c938a950c8a0cd5a7037",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "111",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "ReturnInfo": {
      "title": "ReturnInfo",
      "type": "object",
      "properties": {
        "return_name": {
          "example": "John Doe",
          "type": "string"
        },
        "return_email": {
          "example": "john.doe@example.com",
          "type": "string"
        },
        "return_address": {
          "example": "123 Main Street",
          "type": "string"
        },
        "return_landmark": {
          "type": "string"
        },
        "return_city": {
          "example": "Bangalore",
          "type": "string"
        },
        "return_state": {
          "example": "Karnataka",
          "type": "string"
        },
        "return_country": {
          "example": "IN",
          "type": "string"
        },
        "return_pin_code": {
          "example": "560037",
          "type": "string"
        },
        "return_phone_number": {
          "example": "9876543210",
          "type": "string"
        },
        "return_pickup_date": {
          "example": "2025-05-05",
          "type": "string"
        },
        "reference_number": {
          "example": "REF123456",
          "type": "string"
        }
      }
    },
    "ExchangeItem": {
      "title": "ExchangeItem",
      "type": "object",
      "properties": {
        "variant_id": {
          "example": "1234567",
          "type": "string"
        },
        "quantity": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "images": {
          "example": "https://example.com/product-image.jpg",
          "type": "string"
        },
        "price": {
          "example": "88.85",
          "type": "string"
        },
        "sku": {
          "example": "8905813360889",
          "type": "string"
        },
        "description": {
          "example": "Men White Slim Fit Textured Shirt",
          "type": "string"
        },
        "exchange_type": {
          "example": "SAME_PRODUCT_SAME_VARIANT",
          "type": "string"
        },
        "selected_variant": {
          "example": "38",
          "type": "string"
        },
        "previous_variant": {
          "example": "39",
          "type": "string"
        },
        "item_info_id": {
          "example": 987024482,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ItemInfo": {
      "title": "ItemInfo",
      "type": "object",
      "properties": {
        "id": {
          "example": 987024482,
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "reason_id": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "sub_reason": {
          "type": "string"
        },
        "return_reason_data": {
          "example": "Size too large",
          "type": "string"
        },
        "reason_comment": {
          "example": "Product was too big",
          "type": "string"
        },
        "product_image_link": {
          "example": "https://assets.abfrlcdn.com/img/app/product/4/448854-2992483.jpg",
          "type": "string"
        }
      }
    },
    "UserVerifyEmailRequest": {
      "title": "UserVerifyEmailRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "mode": {
          "example": "emailVerify",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "your-fcm-token",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "UserUpdateEmailVerifiedRequest": {
      "title": "UserUpdateEmailVerifiedRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2670,
          "type": "integer",
          "format": "int32"
        },
        "authenticationCode": {
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "your-fcm-token",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "ProductCustomizeRequest": {
      "title": "ProductCustomizeRequest",
      "type": "object",
      "properties": {
        "categoryId": {
          "example": 7204,
          "type": "integer",
          "format": "int32"
        },
        "colorName": {
          "example": "Brown",
          "type": "string"
        },
        "collar": {
          "example": "Regular Collar",
          "type": "string"
        },
        "fit": {
          "example": "Ultra Slim Fit",
          "type": "string"
        },
        "size": {
          "example": "48",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "your-fcm-token",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        }
      }
    },
    "GamesAddRequest": {
      "title": "GamesAddRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2936221,
          "type": "integer",
          "format": "int32"
        },
        "gameId": {
          "example": 3,
          "type": "integer",
          "format": "int32"
        },
        "mobileoremail": {
          "example": "7640838584",
          "type": "string"
        },
        "socialLogin": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "socialLoginType": {
          "type": "string"
        },
        "socialLoginId": {
          "type": "string"
        },
        "customerPrediction": {
          "example": "0-15",
          "type": "string"
        },
        "expressDelivery": {
          "example": true,
          "type": "boolean"
        },
        "cricketCampaign": {
          "example": true,
          "type": "boolean"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "asdfasda",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "UserRegisterRequest": {
      "title": "UserRegisterRequest",
      "type": "object",
      "properties": {
        "mobile": {
          "example": "8877665533",
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "example": "RG",
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "SVOId": {
          "example": "0",
          "type": "string"
        },
        "socialLogin": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "socialLoginId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "socialLoginType": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "dateOfBirth": {
          "type": "string"
        },
        "gender": {
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "email_subscription": {
          "type": "string"
        },
        "brandShopIds": {
          "example": "2,6,5,32",
          "type": "string"
        },
        "customerId": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "referralCode": {
          "example": "VHMAL330",
          "type": "string"
        },
        "hyperlocalSession": {
          "$ref": "#/definitions/HyperlocalSession"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "HyperlocalSession": {
      "title": "HyperlocalSession",
      "type": "object",
      "properties": {
        "storeData": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StoreData"
          }
        },
        "pincode": {
          "example": "560037",
          "type": "string"
        },
        "addressId": {
          "type": "string"
        },
        "address": {
          "example": "Bengaluru, Karnataka, India",
          "type": "string"
        },
        "lat": {
          "example": 13.9709909,
          "type": "number",
          "format": "double"
        },
        "long": {
          "example": 78.6068996,
          "type": "number",
          "format": "double"
        }
      }
    },
    "UserPreferenceRequest": {
      "title": "UserPreferenceRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "UserShopPreferenceRequest": {
      "title": "UserShopPreferenceRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "genderCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenderCategory"
          }
        },
        "sizes": {
          "example": "38",
          "type": "string"
        },
        "occasion": {
          "example": "wedding",
          "type": "string"
        },
        "colors": {
          "example": "red, green, blue",
          "type": "string"
        },
        "operationType": {
          "example": "update",
          "type": "string"
        },
        "dateOfBirth": {
          "example": "1989-04-18",
          "type": "string",
          "format": "date"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "GenderCategory": {
      "title": "GenderCategory",
      "type": "object",
      "properties": {
        "gender": {
          "example": "Men",
          "type": "string"
        },
        "categories": {
          "example": [
            "jeans",
            "trousers"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CartMoveToCartRequest": {
      "title": "CartMoveToCartRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "example": "1162",
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product1"
          }
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "Product1": {
      "title": "Product1",
      "type": "object",
      "properties": {
        "productId": {
          "example": "642623",
          "type": "string"
        },
        "productAttributeId": {
          "example": "3741725",
          "type": "string"
        }
      }
    },
    "OrderSurveyRequest": {
      "title": "OrderSurveyRequest",
      "type": "object",
      "properties": {
        "orderId": {
          "example": 150113112,
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "UserDeleteProfileRequest": {
      "title": "UserDeleteProfileRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 31,
          "type": "integer",
          "format": "int32"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "OrderCancelRequest": {
      "title": "OrderCancelRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 2937703,
          "type": "integer",
          "format": "int32"
        },
        "orderId": {
          "example": 787683060,
          "type": "integer",
          "format": "int32"
        },
        "reasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reason"
          }
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "Reason": {
      "title": "Reason",
      "type": "object",
      "properties": {
        "reasonText": {
          "example": "Changed my mind",
          "type": "string"
        },
        "reasonId": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OrderReturnRequest": {
      "title": "OrderReturnRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "orderId": {
          "example": 150113112,
          "type": "integer",
          "format": "int32"
        },
        "orderItemId": {
          "example": 7503020,
          "type": "integer",
          "format": "int32"
        },
        "addressId": {
          "example": 1250584,
          "type": "integer",
          "format": "int32"
        },
        "pickupType": {
          "type": "string"
        },
        "refundType": {
          "type": "string"
        },
        "itemQuantity": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "returnReason": {
          "example": "Bad Quality",
          "type": "string"
        },
        "shipmentId": {
          "example": 1234,
          "type": "integer",
          "format": "int32"
        },
        "return_info": {
          "$ref": "#/definitions/ReturnInfo1"
        },
        "shipment_uuid": {
          "example": "76d3b587-767b-4656-9936-8f4c750c2975",
          "type": "string"
        },
        "awb": {
          "example": "111002713",
          "type": "string"
        },
        "domain": {
          "example": "abfrl-test",
          "type": "string"
        },
        "source": {
          "example": "dashboard",
          "type": "string"
        },
        "token": {
          "example": "token",
          "type": "string"
        },
        "item_info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemInfo1"
          }
        },
        "self_shipped": {
          "example": false,
          "type": "boolean"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "ReturnInfo1": {
      "title": "ReturnInfo1",
      "type": "object",
      "properties": {
        "return_name": {
          "example": "MANJUNATH",
          "type": "string"
        },
        "return_email": {
          "example": "manjustdemo@gmail.com",
          "type": "string"
        },
        "return_address": {
          "example": "198, Full address linel",
          "type": "string"
        },
        "return_landmark": {
          "type": "string"
        },
        "return_city": {
          "example": "BANGALORE",
          "type": "string"
        },
        "return_state": {
          "example": "KARNATAKA",
          "type": "string"
        },
        "return_country": {
          "example": "IN",
          "type": "string"
        },
        "return_pin_code": {
          "example": "560056",
          "type": "string"
        },
        "return_phone_number": {
          "example": "9844152842",
          "type": "string"
        },
        "return_pickup_date": {
          "example": "2021-05-31",
          "type": "string",
          "format": "date"
        },
        "reference_number": {
          "example": "ST9968TEST",
          "type": "string"
        }
      }
    },
    "ItemInfo1": {
      "title": "ItemInfo1",
      "type": "object",
      "properties": {
        "id": {
          "example": 629554193,
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "reason_id": {
          "example": 4,
          "type": "integer",
          "format": "int32"
        },
        "reason_comment": {
          "type": "string"
        },
        "product_image_link": {
          "type": "string"
        }
      }
    },
    "CartGiftMessageRequest": {
      "title": "CartGiftMessageRequest",
      "type": "object",
      "properties": {
        "cartId": {
          "example": 111,
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "example": 4,
          "type": "integer",
          "format": "int32"
        },
        "cartProductId": {
          "example": 88,
          "type": "integer",
          "format": "int32"
        },
        "sender": {
          "example": "88 Sender",
          "type": "string"
        },
        "recipient": {
          "example": "88 recipient",
          "type": "string"
        },
        "giftMsg": {
          "example": "88 This is a gift message update",
          "type": "string"
        },
        "applyAllGiftItems": {
          "example": "false",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "ReviewReactionRequest": {
      "title": "ReviewReactionRequest",
      "type": "object",
      "properties": {
        "reviewId": {
          "example": 286,
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "example": 2050,
          "type": "integer",
          "format": "int32"
        },
        "reaction": {
          "description": "Reaction type code (e.g., 1=like, 2=dislike)",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Reaction context (e.g., \"flag\" or \"helpful\")",
          "example": "flag",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "reviewId",
        "customerId",
        "reaction",
        "type"
      ]
    },
    "ReviewDeleteRequest": {
      "title": "ReviewDeleteRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "reviewId": {
          "example": 273,
          "type": "integer",
          "format": "int32"
        },
        "attributes": {
          "type": "string"
        },
        "brand": {
          "example": "trendin",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fcmToken": {
          "example": "{{fcmToken}}",
          "type": "string"
        },
        "version": {
          "example": 1.2,
          "type": "number",
          "format": "double"
        },
        "validateHash": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "customerId",
        "reviewId"
      ]
    }
  },
  "tags": []
}
